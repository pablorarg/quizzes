{"version":3,"sources":["constants.js","components/Button.js","components/QuestionCard.js","hooks/useQuiz.js","services/getQuiz.js","components/QuizCard.js","components/Radio.js","components/CategoryOptions.js","components/DifficultOptions.js","components/SetUpChallenge.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS","BUTTON_COLOR","Button","color","onClick","text","className","style","getStyle","QuestionCard","footer","header","question","INIT_FEEDBACK","quiz","loading","hasError","message","useQuiz","category","difficult","useState","feedback","setFeedback","useEffect","newFeedback","url","fetch","then","response","ok","error","Error","status","json","results","catch","getQuiz","QuizCard","currentQuestion","setCurrentQuestion","points","setPoints","showResult","setShowResult","checkAnswer","answers","correct_answer","type","currentValue","setNextStep","length","difficulty","incorrect_answers","sort","a","b","localeCompare","map","answer","Radio","id","name","onSelect","value","htmlFor","CATEGORIES","CategoryOptions","onChange","DIFFICUlTLY","DifficultOptions","item","SetUpChallenge","onChangeCategory","onChangeDifficult","Home","setCategory","setDifficult","showQuiz","setShowQuiz","onStart","onSelectDifficult","onSelectCategory","renderStart","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82fe7a4b.chunk.js","sourcesContent":["export const COLORS = {\r\n    AQUA_GREEN: '#9ad3bc',\r\n    BEIGE: '#f3eac2',\r\n    ORANGE: '#f5b461',\r\n    RED: '#ec524b',\r\n    TRANSPARENT: 'transparent',\r\n    WHITE: '#fff'\r\n}\r\nexport const BUTTON_COLOR = {\r\n    ORANGE: 'orange',\r\n    RED: 'red',\r\n    WHITE: 'white'\r\n}\r\n\r\n","import React from 'react'\r\nimport { BUTTON_COLOR, COLORS } from '../constants'\r\nimport './Button.css'\r\n\r\nexport default function Button({ color, onClick, text }) {\r\n\r\n    const getStyle = () => {\r\n\r\n        switch (color) {\r\n            case BUTTON_COLOR.ORANGE:\r\n                return {\r\n                    '--mainColor': COLORS.ORANGE,\r\n                    '--alternativeColor': COLORS.RED,\r\n                }\r\n            case BUTTON_COLOR.RED:\r\n                return {\r\n                    '--mainColor': COLORS.RED,\r\n                    '--alternativeColor': COLORS.RED,\r\n                }\r\n\r\n            default:\r\n                return {\r\n                    '--mainColor': COLORS.ORANGE,\r\n                    '--alternativeColor': COLORS.RED,\r\n                }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className=\"button-container\"\r\n            onClick={onClick}\r\n            style={getStyle()}\r\n        >{text}</button>\r\n    )\r\n}","import React from 'react'\r\nimport './QuestionCard.css'\r\nexport default function QuestionCard({ footer, header, question }) {\r\n\r\n    return (\r\n        <div className='question-card-container' >\r\n            <header>{header}</header>\r\n            <section>\r\n                {question}\r\n            </section>\r\n            <footer>{footer}</footer>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport getQuiz from 'services/getQuiz'\r\n\r\nconst INIT_FEEDBACK = {\r\n    quiz: [],\r\n    loading: true,\r\n    hasError: false,\r\n    message: null\r\n}\r\n\r\nexport default function useQuiz({ category = null, difficult = null }) {\r\n\r\n    const [feedback, setFeedback] = useState(INIT_FEEDBACK)\r\n\r\n    useEffect(() => {\r\n\r\n        if (!category && !difficult) return\r\n\r\n        const newFeedback = {\r\n            ...feedback,\r\n            loading: true\r\n        }\r\n\r\n        setFeedback(newFeedback)\r\n\r\n        getQuiz({ category: category, difficult: difficult })\r\n            .then(response => {\r\n                const newFeedback = {\r\n                    ...feedback,\r\n                    loading: false,\r\n                    quiz: response\r\n                }\r\n                setFeedback(newFeedback)\r\n            })\r\n            .catch(error => {\r\n                const newFeedback = {\r\n                    ...feedback,\r\n                    loading: false,\r\n                    hasError: true,\r\n                    message: error.message\r\n                }\r\n                setFeedback(newFeedback)\r\n            });\r\n\r\n    }, [category, difficult])\r\n\r\n    return { feedback }\r\n\r\n}","export default function getQuiz({ category, difficult }) {\r\n\r\n    let url = `https://opentdb.com/api.php?amount=${10}&category=${category}&difficult=${difficult}`\r\n\r\n    return fetch(url)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                let error = new Error(\"Something went wrong. Code: \", response.status)\r\n                error.response = response\r\n                error.status = response.status\r\n\r\n                throw error\r\n            }\r\n            return response.json()\r\n        })\r\n        .then((response => {\r\n            return response.results\r\n        }))\r\n        .catch((error) => {\r\n            throw error\r\n        })\r\n\r\n}","import Button from 'components/Button'\r\nimport QuestionCard from 'components/QuestionCard'\r\nimport useQuiz from 'hooks/useQuiz'\r\nimport React, { useState } from 'react'\r\nimport { BUTTON_COLOR } from '../constants'\r\nimport './QuizCard.css'\r\n\r\nconst POINTS_FOR_BOOLEAN = 5\r\nconst POINTS_FOR_MULTIPLE = 10\r\n\r\nexport default function QuizCard({ category, difficult }) {\r\n\r\n    const { feedback } = useQuiz({ category: category, difficult: difficult })\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [points, setPoints] = useState(0)\r\n    const [showResult, setShowResult] = useState(false)\r\n    const question = feedback.quiz[currentQuestion]\r\n\r\n    if (feedback.loading) return <div className='message'> <span>Loading...</span></div>\r\n\r\n    if (feedback.hasError) return <div className='message' ><span>{feedback.message}</span></div>\r\n\r\n    if (showResult) return <div className='message'><span>You earned {points} points.</span></div>\r\n\r\n    const onAnswer = (text) => {\r\n        checkAnswer(text)\r\n        setNextStep()\r\n    }\r\n\r\n    const checkAnswer = (answers) => {\r\n\r\n        if (question.correct_answer === answers) {\r\n            switch (question.type) {\r\n                case 'boolean':\r\n                    setPoints(currentValue => currentValue + POINTS_FOR_BOOLEAN)\r\n                    break;\r\n                case 'multiple':\r\n                    setPoints(currentValue => currentValue + POINTS_FOR_MULTIPLE)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const setNextStep = () => {\r\n        currentQuestion + 1 === feedback.quiz.length\r\n            ? setShowResult(true)\r\n            : setCurrentQuestion(currentValue => currentValue + 1)\r\n    }\r\n\r\n    const renderAnswers = () => {\r\n        const answers = [...question.incorrect_answers, question.correct_answer]\r\n            .sort((a, b) => a.localeCompare(b))\r\n\r\n        return answers.map(answer => {\r\n            return <Button color={BUTTON_COLOR.ORANGE} key={answer} onClick={() => onAnswer(answer)} text={answer} />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <main className=\"main-container\" >\r\n            <QuestionCard\r\n                footer={`${question.category} - ${question.difficulty}`}\r\n                header={`${currentQuestion + 1} - ${feedback.quiz.length}`}\r\n                question={question.question} />\r\n            <nav className=\"answers\">\r\n                {renderAnswers()}\r\n            </nav>\r\n        </main>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport './Radio.css'\r\n\r\nexport default function Radio({ id = 'any', name = 'name', onSelect, value = 'any' }) {\r\n\r\n\r\n    const onClick = () => {\r\n        onSelect(id)\r\n    }\r\n\r\n    return (\r\n        <div className='radio-container'>\r\n            <input id={id} name={name} onClick={onClick} type='radio' />\r\n            <label htmlFor={id}>{value}</label>\r\n        </div>\r\n    )\r\n}","import Radio from 'components/Radio'\r\nimport React from 'react'\r\nimport './CategoryOptions.css'\r\n\r\nconst CATEGORIES = [\r\n    { id: 18, name: \"Computers\" },\r\n    { id: 30, name: \"Gadgets\" },\r\n    { id: 12, name: \"Music\" },\r\n]\r\n\r\nexport default function CategoryOptions({ onSelect }) {\r\n\r\n    const onChange = (value) => {\r\n        onSelect(value)\r\n    }\r\n\r\n    const renderCategories = () => {\r\n        return CATEGORIES.map(category =>\r\n            <div>\r\n                <Radio key={category.id}\r\n                    id={category.id}\r\n                    name={'category'}\r\n                    onSelect={onChange}\r\n                    value={category.name} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='categories-container'>\r\n            <h3>Categories</h3>\r\n            <section>\r\n                {renderCategories()}\r\n            </section>\r\n        </div>\r\n    )\r\n}","import Radio from 'components/Radio'\r\nimport React from 'react'\r\nimport './DifficultOptions.css'\r\n\r\nconst DIFFICUlTLY = [\r\n    \"hard\",\r\n    \"medium\"\r\n]\r\n\r\nexport default function DifficultOptions({ onSelect }) {\r\n\r\n    const onChange = (value) => {\r\n        onSelect(value)\r\n    }\r\n\r\n    const renderDifficulties = () => {\r\n        return DIFFICUlTLY.map(item =>\r\n            <div>\r\n                <Radio key={item}\r\n                    id={item}\r\n                    name={'difficult'}\r\n                    onSelect={onChange}\r\n                    value={item} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='difficulties-container'>\r\n            <h3>Difficult</h3>\r\n            <section>\r\n                {renderDifficulties()}\r\n            </section>\r\n        </div>\r\n    )\r\n}","\r\nimport CategoryOptions from 'components/CategoryOptions'\r\nimport DifficultOptions from 'components/DifficultOptions'\r\nimport React from 'react'\r\n\r\nexport default function SetUpChallenge({ onChangeCategory, onChangeDifficult }) {\r\n\r\n    const onSelectDifficult = (value) => {\r\n        onChangeDifficult(value)\r\n    }\r\n\r\n    const onSelectCategory = (value) => {\r\n        onChangeCategory(value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Setup your challenge</h2>\r\n            <DifficultOptions onSelect={onSelectDifficult} />\r\n            <CategoryOptions onSelect={onSelectCategory} />\r\n        </>\r\n    )\r\n}","\r\nimport Button from 'components/Button'\r\nimport QuizCard from 'components/QuizCard'\r\nimport SetUpChallenge from 'components/SetUpChallenge'\r\nimport React, { useState } from 'react'\r\nimport { BUTTON_COLOR } from '../constants'\r\n\r\nexport default function Home() {\r\n\r\n    const [category, setCategory] = useState(null)\r\n    const [difficult, setDifficult] = useState(null)\r\n    const [showQuiz, setShowQuiz] = useState(false)\r\n\r\n    const onStart = () => {\r\n        setShowQuiz(true)\r\n    }\r\n\r\n    const onSelectDifficult = (value) => {\r\n        setDifficult(value)\r\n    }\r\n\r\n    const onSelectCategory = (value) => {\r\n        setCategory(value)\r\n    }\r\n\r\n    const renderQuiz = () => {\r\n        return <QuizCard category={category} difficult={difficult} />\r\n    }\r\n\r\n    const renderSetupChallenge = () => {\r\n        return <>\r\n            <SetUpChallenge onChangeCategory={onSelectCategory} onChangeDifficult={onSelectDifficult} />\r\n            <br />\r\n            {renderStart()}\r\n        </>\r\n    }\r\n\r\n    const renderStart = () => {\r\n        return category && difficult &&\r\n            <Button color={BUTTON_COLOR.RED} onClick={onStart} text={'Start ►'} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showQuiz\r\n                ? renderQuiz()\r\n                : renderSetupChallenge()\r\n            }\r\n        </div>\r\n    )\r\n}","import Home from 'pages/Home';\nimport './App.css';\n\nexport default function App() {\n\n  return (\n    <main className='app-container'>\n      <Home />\n    </main>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}