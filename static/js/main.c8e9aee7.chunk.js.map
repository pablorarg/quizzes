{"version":3,"sources":["reducers/gameReducer.js","context/GameContext.js","constants.js","components/Button.js","components/QuestionCard.js","hooks/useGame.js","components/QuizResult.js","hooks/useQuiz.js","services/getQuiz.js","components/QuizCard.js","components/Radio.js","components/CategoryOptions.js","components/DifficultyOptions.js","components/SetUpChallenge.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["gameReducer","state","action","type","category","configured","difficulty","dategory","earnedPoints","Context","createContext","GameContext","children","useReducer","game","dispatch","Provider","value","COLORS","BUTTON_COLOR","Button","color","onClick","text","className","style","getStyle","QuestionCard","footer","header","question","useGame","useContext","QuizResult","points","INIT_FEEDBACK","quiz","loading","hasError","message","useQuiz","useState","feedback","setFeedback","useEffect","newFeedback","difficult","url","fetch","then","response","ok","error","Error","status","json","results","catch","getQuiz","textWithQuotReplaced","JSON","stringify","replace","textParsedToJson","parse","QuizCard","currentQuestion","setCurrentQuestion","setPoints","completed","setCompleted","checkAnswer","answers","correct_answer","currentValue","setNextStep","length","incorrect_answers","sort","a","b","localeCompare","map","answer","Radio","id","name","onSelect","htmlFor","CATEGORIES","CategoryOptions","onChange","DIFFICUlTLY","DifficultyOptions","item","SetUpChallenge","Home","start","setStart","onStart","renderStart","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVACaA,EAAc,SAACC,EAAOC,GAE/B,OAAQA,EAAOC,MACX,IAAK,WACD,OAAO,2BACAF,GADP,IAEIG,SAAUF,EAAOE,SACjBC,aAAYJ,EAAMK,aAE1B,IAAK,aACD,OAAO,2BACAL,GADP,IAEIK,WAAYJ,EAAOI,WACnBD,aAAYJ,EAAMG,WAE1B,IAAK,OACD,MAAO,CACHC,YAAY,EACZE,SAAU,KACVD,WAAY,KACZE,aAAc,GAEtB,QACI,OAAOP,ICrBbQ,EAAUC,wBAAc,IAEvB,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAAY,EAEbC,qBAAWb,EAAa,CAC7CQ,aAAc,EACdF,WAAY,KACZF,SAAU,KACVC,YAAY,IANsB,mBAE/BS,EAF+B,KAEzBC,EAFyB,KAStC,OACI,cAACN,EAAQO,SAAT,CAAkBC,MAAO,CACrBH,OACAC,YAFJ,SAIKH,IAKEH,QCxBFS,EAGD,UAHCA,EAIJ,UAIIC,EACD,SADCA,EAEJ,M,MCNM,SAASC,EAAT,GAA2C,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAwB7C,OACI,wBAAQC,UAAU,mBACdF,QAASA,EACTG,MAzBS,WAEb,OAAQJ,GACJ,KAAKF,EACD,MAAO,CACH,cAAeD,EACf,qBAAsBA,GAE9B,KAAKC,EACD,MAAO,CACH,cAAeD,EACf,qBAAsBA,GAG9B,QACI,MAAO,CACH,cAAeA,EACf,qBAAsBA,IAQvBQ,GAFX,SAGEH,I,iBC9BK,SAASI,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAEnD,OACI,sBAAKN,UAAU,0BAAf,UACI,iCAASK,IACT,kCACKC,IAEL,iCAASF,OCPN,SAASG,IAAW,IAAD,EAEHC,qBAAWvB,GAEtC,MAAO,CAAEK,KAJqB,EAEtBA,KAEOC,SAJe,EAEhBA,U,MCDH,SAASkB,EAAT,GAAqC,IAAD,IAAdC,cAAc,MAAL,EAAK,EAEvCnB,EAAagB,IAAbhB,SAMR,OACI,sBAAKS,UAAU,wBAAf,UACI,gDAAmBU,KACnB,cAAC,EAAD,CAAQZ,QAPA,WACZP,EAAS,CAAEZ,KAAM,UAMaoB,KAAM,iBCZ5C,IAAMY,EAAgB,CAClBC,KAAM,GACNC,SAAS,EACTC,UAAU,EACVC,QAAS,MAGE,SAASC,EAAT,GAA0D,IAAD,IAAtCpC,gBAAsC,MAA3B,KAA2B,MAArBE,kBAAqB,MAAR,KAAQ,IAEpCmC,mBAASN,GAF2B,mBAE7DO,EAF6D,KAEnDC,EAFmD,KAwCpE,OApCAC,qBAAU,WAEN,GAAKxC,GAAaE,EAAlB,CAEA,IAAMuC,EAAW,2BACVH,GADU,IAEbL,SAAS,IAGbM,EAAYE,GCvBL,YAA2C,IAAxBzC,EAAuB,EAAvBA,SAAU0C,EAAa,EAAbA,UAEpCC,EAAG,6CAAyC,GAAzC,aAAwD3C,EAAxD,sBAA8E0C,GAErF,OAAOE,MAAMD,GACRE,MAAK,SAACC,GACH,IAAKA,EAASC,GAAI,CACd,IAAIC,EAAQ,IAAIC,MAAM,+BAAgCH,EAASI,QAI/D,MAHAF,EAAMF,SAAWA,EACjBE,EAAME,OAASJ,EAASI,OAElBF,EAEV,OAAOF,EAASK,UAEnBN,MAAM,SAAAC,GACH,OAAOA,EAASM,WAEnBC,OAAM,SAACL,GACJ,MAAMA,KDMVM,CAAQ,CAAEtD,SAAUA,EAAU0C,UAAWxC,IACpC2C,MAAK,SAAAC,GAEF,IAAMS,EAAuBC,KAAKC,UAAUX,GAAUY,QAAQ,UAAW,KACnEC,EAAmBH,KAAKI,MAAML,GAE9Bd,EAAW,2BACVH,GADU,IAEbL,SAAS,EACTD,KAAM2B,IAEVpB,EAAYE,MAEfY,OAAM,SAAAL,GACH,IAAMP,EAAW,2BACVH,GADU,IAEbL,SAAS,EACTC,UAAU,EACVC,QAASa,EAAMb,UAEnBI,EAAYE,SAGrB,CAACzC,EAAUE,IAEP,CAAEoC,Y,MEvCE,SAASuB,EAAT,GAA6C,IAEhDvB,EAAaF,EAAQ,CAAEpC,SAFwB,EAAxBA,SAEUE,WAFc,EAAdA,aAEjCoC,SAF+C,EAGTD,mBAAS,GAHA,mBAGhDyB,EAHgD,KAG/BC,EAH+B,OAI3B1B,mBAAS,GAJkB,mBAIhDP,EAJgD,KAIxCkC,EAJwC,OAKrB3B,oBAAS,GALY,mBAKhD4B,EALgD,KAKrCC,EALqC,KAMjDxC,EAAWY,EAASN,KAAK8B,GAE/B,GAAIxB,EAASL,QAAS,OAAO,sBAAKb,UAAU,UAAf,cAA0B,iDAEvD,GAAIkB,EAASJ,SAAU,OAAO,qBAAKd,UAAU,UAAf,SAA0B,+BAAOkB,EAASH,YAExE,GAAI8B,EAAW,OAAO,cAAC,EAAD,CAAYnC,OAAQA,IAE1C,IAKMqC,EAAc,SAACC,GAEjB,GAAI1C,EAAS2C,iBAAmBD,EAC5B,OAAQ1C,EAAS3B,MACb,IAAK,UACDiE,GAAU,SAAAM,GAAY,OAAIA,EA3BnB,KA4BP,MACJ,IAAK,WACDN,GAAU,SAAAM,GAAY,OAAIA,EA7BlB,QAqClBC,EAAc,WAChBT,EAAkB,IAAMxB,EAASN,KAAKwC,OAChCN,GAAa,GACbH,GAAmB,SAAAO,GAAY,OAAIA,EAAe,MAe5D,OACI,uBAAMlD,UAAU,iBAAhB,UACI,cAAC,EAAD,CACII,OAAM,UAAKE,EAAS1B,SAAd,cAA4B0B,EAASxB,YAC3CuB,OAAM,UAAKqC,EAAkB,EAAvB,cAA8BxB,EAASN,KAAKwC,QAClD9C,SAAUA,EAASA,WACvB,qBAAKN,UAAU,UAAf,SAjBY,sBAAIM,EAAS+C,mBAAb,CAAgC/C,EAAS2C,iBACpDK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAErBE,KAAI,SAAAC,GACf,OAAO,cAAC,EAAD,CAAQ9D,MAAOF,EAElBG,QAAS,kBAjCjBiD,EAiCgCY,QAhChCR,KAiCQpD,KAAM4D,GAFDA,W,MCvDN,SAASC,EAAT,GAAwE,IAAD,IAAtDC,UAAsD,MAAjD,MAAiD,MAA1CC,YAA0C,MAAnC,OAAmC,EAA3BC,EAA2B,EAA3BA,SAA2B,IAAjBtE,aAAiB,MAAT,MAAS,EAOlF,OACI,sBAAKO,UAAU,kBAAf,UACI,uBAAO6D,GAAIA,EAAIC,KAAMA,EAAMhE,QANnB,WACZiE,EAASF,IAKwClF,KAAK,UAClD,uBAAOqF,QAASH,EAAhB,SAAqBpE,O,UCR3BwE,EAAa,CACf,CAAEJ,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAGL,SAASI,IAAmB,IAE/B3E,EAAagB,IAAbhB,SAEF4E,EAAW,SAAC1E,GACdF,EAAS,CACLZ,KAAM,WACNC,SAAUa,KAgBlB,OACI,sBAAKO,UAAU,uBAAf,UACI,4CACA,kCAdGiE,EAAWP,KAAI,SAAA9E,GAAQ,OAC1B,8BACI,cAAC,EAAD,CACIiF,GAAIjF,EAASiF,GACbC,KAAM,WACNC,SAAUI,EACV1E,MAAOb,EAASkF,QALdlF,EAASiF,Y,UCnBzBO,EAAc,CAChB,OACA,UAGW,SAASC,IAAqB,IAEjC9E,EAAagB,IAAbhB,SAEF4E,EAAW,SAAC1E,GACdF,EAAS,CACLZ,KAAM,aACNG,WAAYW,KAiBpB,OACI,sBAAKO,UAAU,yBAAf,UACI,4CACA,kCAdGoE,EAAYV,KAAI,SAAAY,GAAI,OACvB,8BACI,cAAC,EAAD,CACIT,GAAIS,EACJR,KAAM,YACNC,SAAUI,EACV1E,MAAO6E,KALJA,WCnBR,SAASC,IAEpB,OACI,qCACI,sDACA,cAAC,EAAD,IACA,cAAC,EAAD,OCHG,SAASC,IAAQ,IAAD,EAEDvD,oBAAS,GAFR,mBAEpBwD,EAFoB,KAEbC,EAFa,KAGnBpF,EAASiB,IAATjB,KAER8B,qBAAU,WACNsD,GAAUpF,EAAKT,YAAcS,EAAKT,cACnC,CAACS,IAEJ,IAAMqF,EAAU,WACZD,GAAS,IAePE,EAAc,WAChB,OAAOtF,EAAKT,YACR,cAAC,EAAD,CAAQgB,MAAOF,EAAkBG,QAAS6E,EAAS5E,KAAM,kBAGjE,OACI,8BACK0E,EAlBE,cAAC,EAAD,CAAU7F,SAAUU,EAAKV,SAAU0C,UAAWhC,EAAKR,aAInD,qCACH,cAACyF,EAAD,IACA,uBACCK,S,MCzBE,SAASC,IAEtB,OACE,sBAAM7E,UAAU,gBAAhB,SACE,cAACb,EAAD,UACE,cAACqF,EAAD,QCTR,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c8e9aee7.chunk.js","sourcesContent":["\r\nexport const gameReducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CATEGORY':\r\n            return {\r\n                ...state,\r\n                category: action.category,\r\n                configured: state.difficulty ? true : false,\r\n            }\r\n        case 'DIFFICULTY':\r\n            return {\r\n                ...state,\r\n                difficulty: action.difficulty,\r\n                configured: state.category ? true : false\r\n            }\r\n        case 'INIT':\r\n            return {\r\n                configured: false,\r\n                dategory: null,\r\n                difficulty: null,\r\n                earnedPoints: 0\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { gameReducer } from 'reducers/gameReducer'\r\n\r\nconst Context = createContext({})\r\n\r\nexport function GameContext({ children }) {\r\n\r\n    const [game, dispatch] = useReducer(gameReducer, {\r\n        earnedPoints: 0,\r\n        difficulty: null,\r\n        category: null,\r\n        configured: false,\r\n    })\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            game,\r\n            dispatch\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Context","export const COLORS = {\r\n    AQUA_GREEN: '#9ad3bc',\r\n    BEIGE: '#f3eac2',\r\n    ORANGE: '#f5b461',\r\n    RED: '#ec524b',\r\n    TRANSPARENT: 'transparent',\r\n    WHITE: '#fff'\r\n}\r\nexport const BUTTON_COLOR = {\r\n    ORANGE: 'orange',\r\n    RED: 'red',\r\n    WHITE: 'white'\r\n}\r\n\r\n","import React from 'react'\r\nimport { BUTTON_COLOR, COLORS } from '../constants'\r\nimport './Button.css'\r\n\r\nexport default function Button({ color, onClick, text }) {\r\n\r\n    const getStyle = () => {\r\n\r\n        switch (color) {\r\n            case BUTTON_COLOR.ORANGE:\r\n                return {\r\n                    '--mainColor': COLORS.ORANGE,\r\n                    '--alternativeColor': COLORS.RED,\r\n                }\r\n            case BUTTON_COLOR.RED:\r\n                return {\r\n                    '--mainColor': COLORS.RED,\r\n                    '--alternativeColor': COLORS.RED,\r\n                }\r\n\r\n            default:\r\n                return {\r\n                    '--mainColor': COLORS.ORANGE,\r\n                    '--alternativeColor': COLORS.RED,\r\n                }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className=\"button-container\"\r\n            onClick={onClick}\r\n            style={getStyle()}\r\n        >{text}</button>\r\n    )\r\n}","import React from 'react'\r\nimport './QuestionCard.css'\r\nexport default function QuestionCard({ footer, header, question }) {\r\n\r\n    return (\r\n        <div className='question-card-container' >\r\n            <header>{header}</header>\r\n            <section>\r\n                {question}\r\n            </section>\r\n            <footer>{footer}</footer>\r\n        </div>\r\n    )\r\n}","import Context from 'context/GameContext'\r\nimport { useContext } from 'react'\r\n\r\nexport default function useGame() {\r\n\r\n    const { game, dispatch } = useContext(Context)\r\n\r\n    return { game, dispatch }\r\n\r\n}","import Button from 'components/Button'\r\nimport useGame from 'hooks/useGame'\r\nimport './QuizResult.css'\r\n\r\nexport default function QuizResult({ points = 0 }) {\r\n\r\n    const { dispatch } = useGame()\r\n\r\n    const onClick = () => {\r\n        dispatch({ type: 'INIT' })\r\n    }\r\n\r\n    return (\r\n        <div className='quiz-result-container'>\r\n            <h3>You've earned {points}</h3>\r\n            <Button onClick={onClick} text={'Try again'}></Button>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport getQuiz from 'services/getQuiz'\r\n\r\nconst INIT_FEEDBACK = {\r\n    quiz: [],\r\n    loading: true,\r\n    hasError: false,\r\n    message: null\r\n}\r\n\r\nexport default function useQuiz({ category = null, difficulty = null }) {\r\n\r\n    const [feedback, setFeedback] = useState(INIT_FEEDBACK)\r\n\r\n    useEffect(() => {\r\n\r\n        if (!category && !difficulty) return\r\n\r\n        const newFeedback = {\r\n            ...feedback,\r\n            loading: true\r\n        }\r\n\r\n        setFeedback(newFeedback)\r\n\r\n        getQuiz({ category: category, difficult: difficulty })\r\n            .then(response => {\r\n\r\n                const textWithQuotReplaced = JSON.stringify(response).replace(/&quot;/g, '\\'')\r\n                const textParsedToJson = JSON.parse(textWithQuotReplaced)\r\n\r\n                const newFeedback = {\r\n                    ...feedback,\r\n                    loading: false,\r\n                    quiz: textParsedToJson\r\n                }\r\n                setFeedback(newFeedback)\r\n            })\r\n            .catch(error => {\r\n                const newFeedback = {\r\n                    ...feedback,\r\n                    loading: false,\r\n                    hasError: true,\r\n                    message: error.message\r\n                }\r\n                setFeedback(newFeedback)\r\n            });\r\n\r\n    }, [category, difficulty])\r\n\r\n    return { feedback }\r\n\r\n}","export default function getQuiz({ category, difficult }) {\r\n\r\n    let url = `https://opentdb.com/api.php?amount=${10}&category=${category}&difficult=${difficult}`\r\n\r\n    return fetch(url)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                let error = new Error(\"Something went wrong. Code: \", response.status)\r\n                error.response = response\r\n                error.status = response.status\r\n\r\n                throw error\r\n            }\r\n            return response.json()\r\n        })\r\n        .then((response => {\r\n            return response.results\r\n        }))\r\n        .catch((error) => {\r\n            throw error\r\n        })\r\n\r\n}","import Button from 'components/Button'\r\nimport QuestionCard from 'components/QuestionCard'\r\nimport QuizResult from 'components/QuizResult'\r\nimport useQuiz from 'hooks/useQuiz'\r\nimport React, { useState } from 'react'\r\nimport { BUTTON_COLOR } from '../constants'\r\nimport './QuizCard.css'\r\n\r\nconst POINTS_FOR_BOOLEAN = 5\r\nconst POINTS_FOR_MULTIPLE = 10\r\n\r\nexport default function QuizCard({ category, difficulty }) {\r\n\r\n    const { feedback } = useQuiz({ category, difficulty })\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [points, setPoints] = useState(0)\r\n    const [completed, setCompleted] = useState(false)\r\n    const question = feedback.quiz[currentQuestion]\r\n\r\n    if (feedback.loading) return <div className='message'> <span>Loading...</span></div>\r\n\r\n    if (feedback.hasError) return <div className='message' ><span>{feedback.message}</span></div>\r\n\r\n    if (completed) return <QuizResult points={points} />\r\n\r\n    const onAnswer = (text) => {\r\n        checkAnswer(text)\r\n        setNextStep()\r\n    }\r\n\r\n    const checkAnswer = (answers) => {\r\n\r\n        if (question.correct_answer === answers) {\r\n            switch (question.type) {\r\n                case 'boolean':\r\n                    setPoints(currentValue => currentValue + POINTS_FOR_BOOLEAN)\r\n                    break;\r\n                case 'multiple':\r\n                    setPoints(currentValue => currentValue + POINTS_FOR_MULTIPLE)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const setNextStep = () => {\r\n        currentQuestion + 1 === feedback.quiz.length\r\n            ? setCompleted(true)\r\n            : setCurrentQuestion(currentValue => currentValue + 1)\r\n    }\r\n\r\n    const renderAnswers = () => {\r\n        const answers = [...question.incorrect_answers, question.correct_answer]\r\n            .sort((a, b) => a.localeCompare(b))\r\n\r\n        return answers.map(answer => {\r\n            return <Button color={BUTTON_COLOR.ORANGE}\r\n                key={answer}\r\n                onClick={() => onAnswer(answer)}\r\n                text={answer} />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <main className=\"main-container\" >\r\n            <QuestionCard\r\n                footer={`${question.category} - ${question.difficulty}`}\r\n                header={`${currentQuestion + 1} - ${feedback.quiz.length}`}\r\n                question={question.question} />\r\n            <nav className=\"answers\">\r\n                {renderAnswers()}\r\n            </nav>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport './Radio.css'\r\n\r\nexport default function Radio({ id = 'any', name = 'name', onSelect, value = 'any' }) {\r\n\r\n\r\n    const onClick = () => {\r\n        onSelect(id)\r\n    }\r\n\r\n    return (\r\n        <div className='radio-container'>\r\n            <input id={id} name={name} onClick={onClick} type='radio' />\r\n            <label htmlFor={id}>{value}</label>\r\n        </div>\r\n    )\r\n}","import Radio from 'components/Radio'\r\nimport useGame from 'hooks/useGame'\r\nimport React from 'react'\r\nimport './CategoryOptions.css'\r\n\r\nconst CATEGORIES = [\r\n    { id: 18, name: \"Computers\" },\r\n    { id: 30, name: \"Gadgets\" },\r\n    { id: 12, name: \"Music\" },\r\n]\r\n\r\nexport default function CategoryOptions() {\r\n\r\n    const { dispatch } = useGame()\r\n\r\n    const onChange = (value) => {\r\n        dispatch({\r\n            type: 'CATEGORY',\r\n            category: value\r\n        })\r\n    }\r\n\r\n    const renderCategories = () => {\r\n        return CATEGORIES.map(category =>\r\n            <div key={category.id}>\r\n                <Radio\r\n                    id={category.id}\r\n                    name={'category'}\r\n                    onSelect={onChange}\r\n                    value={category.name} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='categories-container'>\r\n            <h3>Categories</h3>\r\n            <section>\r\n                {renderCategories()}\r\n            </section>\r\n        </div>\r\n    )\r\n}","import Radio from 'components/Radio'\r\nimport useGame from 'hooks/useGame'\r\nimport React from 'react'\r\nimport './DifficultyOptions.css'\r\n\r\nconst DIFFICUlTLY = [\r\n    \"hard\",\r\n    \"medium\"\r\n]\r\n\r\nexport default function DifficultyOptions() {\r\n\r\n    const { dispatch } = useGame()\r\n\r\n    const onChange = (value) => {\r\n        dispatch({\r\n            type: 'DIFFICULTY',\r\n            difficulty: value\r\n        })\r\n    }\r\n\r\n    const renderDifficulties = () => {\r\n\r\n        return DIFFICUlTLY.map(item =>\r\n            < div key={item}>\r\n                <Radio\r\n                    id={item}\r\n                    name={'difficult'}\r\n                    onSelect={onChange}\r\n                    value={item} />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='difficulties-container'>\r\n            <h3>Difficulty</h3>\r\n            <section>\r\n                {renderDifficulties()}\r\n            </section>\r\n        </div>\r\n    )\r\n}","\r\nimport CategoryOptions from 'components/CategoryOptions'\r\nimport DifficultyOptions from 'components/DifficultyOptions'\r\nimport React from 'react'\r\n\r\nexport default function SetUpChallenge() {\r\n\r\n    return (\r\n        <>\r\n            <h2>Setup your challenge</h2>\r\n            <DifficultyOptions />\r\n            <CategoryOptions />\r\n        </>\r\n    )\r\n}","\r\nimport Button from 'components/Button'\r\nimport QuizCard from 'components/QuizCard'\r\nimport SetUpChallenge from 'components/SetUpChallenge'\r\nimport useGame from 'hooks/useGame'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { BUTTON_COLOR } from '../constants'\r\n\r\nexport default function Home() {\r\n\r\n    const [start, setStart] = useState(false)\r\n    const { game } = useGame()\r\n\r\n    useEffect(() => {\r\n        setStart(!game.configured && game.configured)\r\n    }, [game])\r\n\r\n    const onStart = () => {\r\n        setStart(true)\r\n    }\r\n\r\n    const renderQuiz = () => {\r\n        return <QuizCard category={game.category} difficult={game.difficulty} />\r\n    }\r\n\r\n    const renderSetupChallenge = () => {\r\n        return <>\r\n            <SetUpChallenge />\r\n            <br />\r\n            {renderStart()}\r\n        </>\r\n    }\r\n\r\n    const renderStart = () => {\r\n        return game.configured &&\r\n            <Button color={BUTTON_COLOR.RED} onClick={onStart} text={'Start ►'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {start\r\n                ? renderQuiz()\r\n                : renderSetupChallenge()\r\n            }\r\n        </div>\r\n    )\r\n}","import { GameContext } from 'context/GameContext';\nimport Home from 'pages/Home';\nimport './App.css';\n\nexport default function App() {\n\n  return (\n    <main className='app-container'>\n      <GameContext>\n        <Home />\n      </GameContext>\n    </main>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}